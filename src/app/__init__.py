"""
AnimeSorter Application Core

애플리케이션 레벨의 핵심 컴포넌트들을 제공합니다.
"""

import logging

logger = logging.getLogger(__name__)
from src.core import (FileOperationResult, FileParser, ParsedMetadata,
                      TMDBAnimeInfo, TMDBClient)
# 새로운 12개 핵심 이벤트 시스템
from src.core.events import CoreEvent, CoreEventType
from src.core.events.event_publisher import event_publisher
from src.core.unified_config import unified_config_manager

# 기존 이벤트들은 새로운 12개 핵심 이벤트 시스템으로 대체됨
# from .application_events import ...
# from .background_events import ...
from .background_task import BaseTask, TaskResult, TaskSignals
from .commands import (BaseCommand, BatchFileCommand, CommandError,
                       CommandInvoker, CommandResult, CommandStatus,
                       CopyFileCommand, CreateDirectoryCommand,
                       DeleteFileCommand, ICommand, ICommandInvoker,
                       MoveFileCommand)
from .container import DIContainer, get_container
from .domain import (MediaFile, MediaGroup, MediaLibrary, MediaMetadata,
                     MediaQuality, MediaSource, MediaType, ProcessingFlag)
from .events import BaseEvent, get_event_bus
# 기존 파일 처리 이벤트들은 새로운 12개 핵심 이벤트 시스템으로 대체됨
# from .file_processing_events import ...
# Journal 시스템 제거됨
# 기존 미디어 데이터 이벤트들은 새로운 12개 핵심 이벤트 시스템으로 대체됨
# from .media_data_events import ...
# 기존 조직화 이벤트들은 새로운 12개 핵심 이벤트 시스템으로 대체됨
# from .organization_events import ...
from .preflight import (BasePreflightChecker, CircularReferenceChecker,
                        DiskSpaceChecker, FileConflictChecker, FileLockChecker,
                        IPreflightChecker, IPreflightCoordinator,
                        PathValidityChecker, PermissionChecker,
                        PreflightCheckResult, PreflightCoordinator,
                        PreflightIssue, PreflightResult, PreflightSeverity)
# Safety 모듈은 새로운 서비스 아키텍처로 대체됨
# from .safety import ...
# 기존 안전 이벤트들은 새로운 12개 핵심 이벤트 시스템으로 대체됨
# from .safety_events import ...
from .services import (FileScanService, IFileScanService, IMediaDataService,
                       MediaDataService)
from .setup import cleanup_application, get_service, initialize_application
# ui_events 모듈이 없으므로 주석 처리
# from .ui_events import (ErrorMessageEvent, FileCountUpdateEvent,
#                         MemoryUsageUpdateEvent, MenuStateUpdateEvent,
#                         ProgressUpdateEvent, SettingsExportEvent,
#                         SettingsImportEvent, SettingsResetEvent,
#                         SettingsSavedEvent, StatusBarUpdateEvent,
#                         SuccessMessageEvent, TableDataUpdateEvent,
#                         ThemeUpdateEvent, UIStateUpdateEvent,
#                         WindowTitleUpdateEvent)
from .undo_redo import (IUndoRedoManager, QtBatchFileCommand,
                        QtCopyFileCommand, QtCreateDirectoryCommand,
                        QtDeleteFileCommand, QtMoveFileCommand,
                        UndoRedoConfiguration, UndoRedoManager,
                        UndoRedoMenuManager, UndoRedoShortcutManager,
                        UndoRedoStatistics, UndoRedoToolbarManager,
                        UndoRedoUIIntegration)

__all__ = [
    "DIContainer",
    "get_container",
    "TypedEventBus",
    "BaseEvent",
    "get_event_bus",
    "MediaFile",
    "MediaGroup",
    "MediaLibrary",
    "MediaType",
    "ProcessingFlag",
    "MediaQuality",
    "MediaSource",
    "MediaMetadata",
    "FileOperationResult",
    "FileParser",
    "ParsedMetadata",
    "unified_config_manager",
    "AppSettings",
    "TMDBClient",
    "TMDBAnimeInfo",
    # 새로운 12개 핵심 이벤트 시스템
    "CoreEvent",
    "CoreEventType",
    "event_publisher",
    # 기존 이벤트들은 새로운 시스템으로 대체됨
    # "FilesScannedEvent",
    # "MetadataSyncedEvent",
    # "FileOperationPlannedEvent",
    # "FileOperationAppliedEvent",
    # "OperationFailedEvent",
    # "MediaFileCreatedEvent",
    # "MediaGroupCreatedEvent",
    # "ScanStatus",
    # "OperationType",
    # "OperationStatus",
    # ui_events 모듈이 없으므로 주석 처리
    # "StatusBarUpdateEvent",
    # "ProgressUpdateEvent",
    # "FileCountUpdateEvent",
    # "MemoryUsageUpdateEvent",
    # "UIStateUpdateEvent",
    # "ErrorMessageEvent",
    # "SuccessMessageEvent",
    # "TableDataUpdateEvent",
    # "WindowTitleUpdateEvent",
    # "MenuStateUpdateEvent",
    # "ThemeUpdateEvent",
    # "SettingsChangedEvent",
    # "SettingsSavedEvent",
    # "SettingsResetEvent",
    # "SettingsImportEvent",
    # "SettingsExportEvent",
    # 기존 백그라운드 이벤트들은 새로운 시스템으로 대체됨
    # "TaskStatus",
    # "TaskPriority",
    # "TaskStartedEvent",
    # "TaskProgressEvent",
    # "TaskCompletedEvent",
    # "TaskFailedEvent",
    # "TaskCancelledEvent",
    # "TaskQueueStatusEvent",
    # "TaskRetryEvent",
    "BaseCommand",
    "CommandResult",
    "CommandStatus",
    "CommandError",
    "ICommand",
    "MoveFileCommand",
    "CopyFileCommand",
    "DeleteFileCommand",
    "CreateDirectoryCommand",
    "BatchFileCommand",
    "CommandInvoker",
    "ICommandInvoker",
    "CommandExecutedEvent",
    "CommandUndoneEvent",
    "CommandRedoneEvent",
    "CommandFailedEvent",
    "BatchCommandStartedEvent",
    "BatchCommandCompletedEvent",
    "BasePreflightChecker",
    "PreflightResult",
    "PreflightSeverity",
    "PreflightIssue",
    "IPreflightChecker",
    "FileConflictChecker",
    "PermissionChecker",
    "DiskSpaceChecker",
    "PathValidityChecker",
    "CircularReferenceChecker",
    "FileLockChecker",
    "PreflightCoordinator",
    "IPreflightCoordinator",
    "PreflightCheckResult",
    "PreflightStartedEvent",
    "PreflightCompletedEvent",
    "PreflightIssueFoundEvent",
    "PreflightCheckFailedEvent",
    "BatchPreflightStartedEvent",
    "BatchPreflightCompletedEvent",
    # Journal 시스템 제거됨 'QtCommandWrapper',
    "QtMoveFileCommand",
    "QtCopyFileCommand",
    "QtDeleteFileCommand",
    "QtCreateDirectoryCommand",
    "QtBatchFileCommand",
    "UndoRedoManager",
    "IUndoRedoManager",
    "UndoRedoConfiguration",
    "UndoRedoStatistics",
    # undo_redo_events 모듈이 없으므로 주석 처리
    # "UndoExecutedEvent",
    # "RedoExecutedEvent",
    # "UndoRedoStackChangedEvent",
    # "UndoRedoEnabledEvent",
    # "CommandPushedToStackEvent",
    # "StackClearedEvent",
    # "UndoRedoErrorEvent",
    "UndoRedoUIIntegration",
    "UndoRedoMenuManager",
    "UndoRedoToolbarManager",
    "UndoRedoShortcutManager",
    "BackupManager",
    "IBackupManager",
    "BackupConfiguration",
    "BackupStrategy",
    "BackupInfo",
    "ConfirmationManager",
    "IConfirmationManager",
    "ConfirmationRequest",
    "ConfirmationResponse",
    "InterruptionManager",
    "IInterruptionManager",
    "InterruptionRequest",
    "InterruptionResult",
    "SafetyManager",
    "ISafetyManager",
    "SafetyConfiguration",
    "SafetyMode",
    "SafetyStatus",
    # 기존 안전 이벤트들은 새로운 시스템으로 대체됨
    # "BackupStartedEvent",
    # "BackupCompletedEvent",
    # "BackupFailedEvent",
    # "BackupCleanupEvent",
    # "ConfirmationRequiredEvent",
    # "ConfirmationResponseEvent",
    # "BatchOperationWarningEvent",
    # "OperationInterruptRequestedEvent",
    # "OperationInterruptedEvent",
    # "OperationResumeRequestedEvent",
    # "SafetyModeChangedEvent",
    # "TestModeOperationEvent",
    # "SafetyStatusUpdateEvent",
    # "SafetyAlertEvent",
    # 기존 조직화 이벤트들은 새로운 시스템으로 대체됨
    # "OrganizationStatus",
    # "OrganizationErrorType",
    # "OrganizationValidationResult",
    # "OrganizationResult",
    # "OrganizationPreflightData",
    # "OrganizationValidationStartedEvent",
    # "OrganizationValidationCompletedEvent",
    # "OrganizationValidationFailedEvent",
    # "OrganizationPreflightStartedEvent",
    # "OrganizationPreflightCompletedEvent",
    # "OrganizationStartedEvent",
    # "OrganizationProgressEvent",
    # "OrganizationCompletedEvent",
    # "OrganizationFailedEvent",
    # "OrganizationCancelledEvent",
    # 기존 미디어 데이터 이벤트들은 새로운 시스템으로 대체됨
    # "MediaDataStatus",
    # "GroupingStrategy",
    # "FilterCriteria",
    # "MediaDataStatistics",
    # "MediaDataFilter",
    # "MediaDataGrouping",
    # "MediaDataLoadStartedEvent",
    # "MediaDataParsingProgressEvent",
    # "MediaDataParsingCompletedEvent",
    # "MediaDataGroupingStartedEvent",
    # "MediaDataGroupingCompletedEvent",
    # "MediaDataFilteringStartedEvent",
    # "MediaDataFilteringCompletedEvent",
    # "MediaDataReadyEvent",
    # "MediaDataErrorEvent",
    # "MediaDataUpdatedEvent",
    # "MediaDataClearedEvent",
    # "MediaDataExportStartedEvent",
    # "MediaDataExportCompletedEvent",
    "TMDBSearchStatus",
    "TMDBMediaType",
    "TMDBSearchType",
    "TMDBMatchConfidence",
    "TMDBSearchResult",
    "TMDBMatch",
    "TMDBSearchQuery",
    "TMDBSearchStatistics",
    "TMDBSearchStartedEvent",
    "TMDBSearchProgressEvent",
    "TMDBSearchResultsEvent",
    "TMDBMatchFoundEvent",
    "TMDBMatchNotFoundEvent",
    "TMDBSearchCompletedEvent",
    "TMDBSearchFailedEvent",
    "TMDBSearchCancelledEvent",
    "TMDBCacheUpdatedEvent",
    "TMDBRateLimitEvent",
    "TMDBManualSelectionRequestedEvent",
    "TMDBManualSelectionCompletedEvent",
    "TMDBBulkSearchStartedEvent",
    "TMDBBulkSearchProgressEvent",
    "TMDBBulkSearchCompletedEvent",
    # 기존 파일 처리 이벤트들은 새로운 시스템으로 대체됨
    # "FileProcessingStatus",
    # "FileOperationType",
    # "FileProcessingStartedEvent",
    # "FileProcessingProgressEvent",
    # "FileProcessingStepEvent",
    # "FileProcessingFileEvent",
    # "FileProcessingBatchEvent",
    # "FileProcessingSpeedEvent",
    # "FileProcessingStatisticsEvent",
    # "FileProcessingCompletedEvent",
    # "FileProcessingFailedEvent",
    # "FileProcessingCancelledEvent",
    # "FileProcessingPausedEvent",
    # "FileProcessingResumedEvent",
    # "ProgressCallback",
    # "DetailedProgressCallback",
    # "calculate_progress_percentage",
    # "calculate_processing_speed",
    # "estimate_remaining_time",
    "BaseTask",
    "TaskResult",
    "TaskSignals",
    "FileScanService",
    "IFileScanService",
    "MediaDataService",
    "IMediaDataService",
    "initialize_application",
    "cleanup_application",
    "get_service",
]
# MediaFileDeletedEvent와 MediaFileMovedEvent가 정의되지 않았으므로 주석 처리
# FileDeletedEvent = MediaFileDeletedEvent
# FileMovedEvent = MediaFileMovedEvent
